let workerCode='\nlet QOper8Worker={handlersByMessageType:new Map,handlers:new Map,id:!1,lastActivityAt:Date.now(),delay:6e4,timer:!1,inactivityLimit:18e4,isActive:!1,toBeTerminated:!1,logging:!1,listeners:new Map,on:function(e,r){this.listeners.has(e)||this.listeners.set(e,r)},off:function(e){this.listeners.has(e)&&this.listeners.delete(e)},emit:function(e,r){if(this.listeners.has(e)){this.listeners.get(e).call(this,r)}}};onmessage=async function(e){function r(e){(e=e||{}).qoper8={finished:!0},postMessage(e),QOper8Worker.emit("finished",e),QOper8Worker.isActive=!1,QOper8Worker.toBeTerminated&&t()}function i(e){QOper8Worker.logging&&console.log(Date.now()+": "+e)}function t(){i("Worker "+QOper8Worker.id+" sending request to shut down");clearInterval(QOper8Worker.timer),postMessage({qoper8:{shutdown:!0}}),QOper8Worker.emit("shutdown_signal_sent")}let o;QOper8Worker.lastActivityAt=Date.now(),QOper8Worker.isActive=!0,QOper8Worker.log=i;let s=e.data;if(s.qoper8&&s.qoper8.init&&void 0!==s.qoper8.id)return QOper8Worker.id=s.qoper8.id,s.qoper8.workerInactivityCheckTime&&(QOper8Worker.delay=s.qoper8.workerInactivityCheckTime),s.qoper8.workerInactivityLimit&&(QOper8Worker.inactivityLimit=s.qoper8.workerInactivityLimit),s.qoper8.handlersByMessageType&&(QOper8Worker.handlersByMessageType=s.qoper8.handlersByMessageType),QOper8Worker.logging=s.qoper8.logging,QOper8Worker.timer=setInterval(function(){let e=Date.now()-QOper8Worker.lastActivityAt;i("Worker "+QOper8Worker.id+" inactive for "+e),i("Inactivity limit: "+QOper8Worker.inactivityLimit),e>QOper8Worker.inactivityLimit&&(QOper8Worker.isActive?(i("Worker "+QOper8Worker.id+" flagged for termination"),QOper8Worker.toBeTerminated=!0):t())},QOper8Worker.delay),i("new worker "+QOper8Worker.id+" started..."),QOper8Worker.emit("started",{id:QOper8Worker.id}),r();if(i("Message received by worker "+QOper8Worker.id+": "+JSON.stringify(s,null,2)),QOper8Worker.emit("received",{message:s}),!s.type&&!s.handlerUrl)return o="No type or handler specified in message sent to worker "+QOper8Worker.id,QOper8Worker.emit("error",o),r({error:o,originalMessage:s});if(!s.type||!QOper8Worker.handlersByMessageType.has(s.type))return i(o="No handler for messages of type "+s.type),QOper8Worker.emit("error",o),r({error:o,originalMessage:s});if(!QOper8Worker.handlers.has(s.type)){let e=QOper8Worker.handlersByMessageType.get(s.type);i("fetching "+e);try{importScripts(e);let t=self.handler;QOper8Worker.handlers.set(s.type,t),QOper8Worker.emit("handler_imported",{handlerUrl:e})}catch(t){return i(o="Unable to load Handler Url "+e),i(JSON.stringify(t,null,2)),QOper8Worker.emit("error",o),r({error:o,originalMessage:s,workerId:QOper8Worker.id})}}QOper8Worker.handlers.get(s.type).call(QOper8Worker,s,r)};\n';class QOper8{constructor(e){(e=e||{}).workerInactivityCheckInterval&&(e.workerInactivityCheckInterval=1e3*e.workerInactivityCheckInterval),e.workerInactivityLimit&&(e.workerInactivityLimit=6e4*e.workerInactivityLimit),this.name="QOper8",this.build="2.3",this.buildDate="4 August 2022",this.logging=e.logging||!1,this.queue=[],this.workers=new Map,this.isAvailable=new Map,this.callbacks=new Map,this.nextWorkerId=0,this.poolSize=e.poolSize||1,this.worker={inactivityCheckInterval:e.workerInactivityCheckInterval||6e4,inactivityLimit:e.workerInactivityLimit||12e5},this.handlersByMessageType=e.handlersByMessageType||new Map,this.listeners=new Map}log(e){this.logging&&console.log(Date.now()+": "+e)}addToQueue(e){this.queue.push(e),this.emit("addedToQueue",e),this.processQueue()}message(e,r){e.qoper8={callback:r||!1},this.addToQueue(e)}send(e){let r=this;return new Promise(i=>{r.message(e,function(e){i(e)})})}getWorker(){for(const[e,r]of this.workers){if(r.id=e,this.isAvailable.get(+r.id))return r;this.log("worker "+e+" is not available")}return!1}sendMessageToWorker(e){if(0===this.queue.length)return;let r=this.queue.shift(),i=e.id;this.callbacks.set(i,r.qoper8.callback),delete r.qoper8,this.isAvailable.set(+i,!1),e.postMessage(r),this.emit("sentToWorker",{message:r,workerId:i})}processQueue(){if(this.log("try processing queue: length "+this.queue.length),0===this.queue.length)return void this.log("Queue empty");let e=this.getWorker();e?(this.log("worker "+e.id+" was available. Sending message to it"),this.sendMessageToWorker(e)):(this.log("no available workers"),this.workers.size<this.poolSize&&(this.log("starting new worker"),this.startWorker()))}createUrl(e){let r,i;try{r=new Blob([e],{type:"application/javascript"})}catch(i){try{let i=new(window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder);i.append(e),r=i.getBlob("application/javascript")}catch(e){return!1}}try{i=(window.URL||window.webkitURL).createObjectURL(r)}catch(e){i=!1}return i}startWorker(){let e,r=this.createUrl(workerCode);r?e=new Worker(r):(e={}).postMessage=function(e){};let i=this;e.onmessage=function(r){let t=r.data;if(i.emit("replyReceived",{reply:t,workerId:e.id}),i.log("response received from Worker: "+e.id),i.log(JSON.stringify(t,null,2)),i.callbacks.has(e.id)){let r=i.callbacks.get(e.id);r&&r(t),i.callbacks.delete(e.id)}t.qoper8&&(t.qoper8.finished?(i.isAvailable.set(+e.id,!0),i.processQueue()):t.qoper8.shutdown&&(i.log("Master shutting down worker "+e.id),i.workers.delete(e.id),i.emit("workerTerminated",e.id),e.terminate()))},e.id=this.nextWorkerId++,e.postMessage({qoper8:{init:!0,id:e.id,handlersByMessageType:this.handlersByMessageType,workerInactivityCheckTime:this.worker.inactivityCheckTime,workerInactivityLimit:this.worker.inactivityLimit,logging:this.logging}}),this.workers.set(e.id,e),this.emit("workerStarted",e.id)}on(e,r){this.listeners.has(e)||this.listeners.set(e,r)}off(e){this.listeners.has(e)&&this.listeners.delete(e)}emit(e,r){if(this.listeners.has(e)){this.listeners.get(e).call(this,r)}}}export{QOper8};